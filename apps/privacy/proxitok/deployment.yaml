apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxitok
  namespace: proxitok
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxitok
  template:
    metadata:
      labels:
        app: proxitok
    spec:
      volumes:
        - name: cache-volume
          emptyDir:
            medium: Memory
        - name: shm
          emptyDir:
            medium: Memory
      initContainers:
        - name: init-cache
          image: busybox
          securityContext:
            runAsUser: 0
          command: ["/bin/sh", "-c"]
          args:
            - mkdir -p /cache && 
              chown -R 65534:65534 /cache
          volumeMounts:
            - name: cache-volume
              mountPath: /cache
      containers:
        - name: main
          image: ghcr.io/pablouser1/proxitok@sha256:9300a54e10314e1fb8b3c2056705d6a931ce979d92793fd972c37ded446ece60
          volumeMounts:
            - name: cache-volume
              mountPath: /cache
          env:
            - name: LATTE_CACHE
              value: "/cache"
            - name: API_CACHE
              value: "redis"
            - name: REDIS_HOST
              value: "localhost"
            - name: REDIS_PORT
              value: "6379"
            - name: API_CHROMEDRIVER
              value: "http://localhost:9515"
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              memory: 600Mi
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - CHOWN
                - SETGID
                - SETUID
        - name: chromedriver
          image: zenika/alpine-chrome:with-chromedriver
          volumeMounts:
            - name: shm
              mountPath: /dev/shm
          resources:
            limits:
              memory: 1Gi
            requests:
              memory: 512Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          ports:
            - containerPort: 9515
        - name: redis
          image: public.ecr.aws/docker/library/redis:7.4-alpine
          command: ["redis-server", "--save", "", "--appendonly", "no"]
          securityContext:
            runAsUser: 65534
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          ports:
            - containerPort: 6379
configs:
  cm:
    create: true
    application.resourceTrackingMethod: "annotation+label"
    configManagementPlugins: |
      - name: kustomize-fetch-tunnel-id
        init:
          command: ["/bin/sh", "-c"]
          args: ["echo 'Initializing kustomize-fetch-tunnel-id plugin...'"]
        generate:
          command: ["sh"] # The interpreter for your script
          # This path is relative to the root of the application's
          # Git repository when Argo CD checks it out.
          args: ["scripts/kustomize-patch-tunnel-id.sh"]
          
    # Ignore differences for HTTPRoute resources
    resource.customizations.ignoreDifferences.gateway.networking.k8s.io_HTTPRoute: |
      jqPathExpressions:
      - '.spec.parentRefs[]?.group'
      - '.spec.parentRefs[]?.kind'
      - '.spec.rules[]?.backendRefs[]?.group'
      - '.spec.rules[]?.backendRefs[]?.kind'

    # Ignoring differences in ExternalSecret resources
    resource.customizations.ignoreDifferences.external-secrets.io_ExternalSecret: |
      jqPathExpressions:
      - '.spec.data[]?.remoteRef?.conversionStrategy'
      - '.spec.data[]?.remoteRef?.decodingStrategy'
      - '.spec.data[]?.remoteRef?.metadataPolicy'
  cmp:
    create: true
    plugins:
      kustomize-build-with-helm:
        generate:
          command: ["sh", "-c"]
          args: ["kustomize build --enable-helm"]
  params:
    server.insecure: true
    controller.resource.health.persist: "false"
crds:
  install: true
  # -- Keep CRDs on chart uninstall
  keep: false
controller:
  resources:
    requests:
      cpu: 100m
      memory: 700Mi
    limits:
      cpu: 4000m
      memory: 2Gi
dex:
  enabled: false
  resources:
    requests:
      cpu: 20m
      memory: 64Mi
    limits:
      cpu: 1000m
      memory: 256Mi
redis:
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 2000m
      memory: 128Mi
server:
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 4000m
      memory: 256Mi
repoServer:
  containerSecurityContext:
    readOnlyRootFilesystem: true
  volumes:
    - name: cmp-kustomize-build-with-helm
      configMap:
        name: argocd-cmp-cm
    - name: cmp-tmp
      emptyDir: {}
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 4000m
      memory: 1024Mi
  extraContainers:
    - name: kustomize-build-with-helm
      command:
        - argocd-cmp-server
      image: '{{ default .Values.global.image.repository .Values.repoServer.image.repository }}:{{ default (include "argo-cd.defaultTag" .) .Values.repoServer.image.tag }}'
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop: ["ALL"]
      volumeMounts:
        - name: plugins
          mountPath: /home/argocd/cmp-server/plugins
        - name: cmp-kustomize-build-with-helm
          mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: kustomize-build-with-helm.yaml
        - mountPath: /tmp
          name: cmp-tmp
applicationSet:
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 1000m
      memory: 512Mi
notifications:
  enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 1000m
      memory: 128Mi

apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres-cluster
  namespace: cloudnative-pg
spec:
  instances: 3
  # PostgreSQL configuration
  postgresql:
    parameters:
      shared_buffers: 256MB
      max_connections: "100"
  # Resource requirements
  resources:
    requests:
      memory: "2Gi"
      cpu: "1"
    limits:
      memory: "2Gi"
      cpu: "2"
  # Primary service configuration
  primaryServiceType: ClusterIP
  # Storage configuration
  storage:
    size: 100Gi
    storageClass: local-storage
  # Bootstrap configuration
  bootstrap:
    initdb:
      database: postgres
      owner: postgres
      secret:
        name: postgres-superuser-secret
  # Monitoring configuration
  monitoring:
    enablePodMonitor: true
  # External clusters configuration for backup
  backup:
    retentionPolicy: "30d"
    barmanObjectStore:
      destinationPath: "s3://your-bucket/path/to/backup"
      endpointURL: "https://your-s3-endpoint"
      s3Credentials:
        accessKeyId:
          name: postgres-backup-secret
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: postgres-backup-secret
          key: ACCESS_SECRET_KEY
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-superuser-secret
  namespace: cloudnative-pg
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: postgres-superuser-secret
    creationPolicy: Owner
  data:
    - secretKey: username
      remoteRef:
        key: postgres_superuser_username
    - secretKey: password
      remoteRef:
        key: postgres_superuser_password
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-backup-secret
  namespace: cloudnative-pg
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: postgres-backup-secret
    creationPolicy: Owner
  data:
    - secretKey: ACCESS_KEY_ID
      remoteRef:
        key: postgres_backup_access_key_id
    - secretKey: ACCESS_SECRET_KEY
      remoteRef:
        key: postgres_backup_secret_access_key
